RichFaces 4 Archetype

BUILDING THE ARCHETYPE

just execute mvn clean install in the root folder

APPLICATION CREATION

This archetype creates a simple RichFaces 4 application with all the settings and custom artifacts you need to perform deply to GAE cloud. 

1) To generate a project from the archetype, run

    mvn archetype:generate -DarchetypeGroupId=org.richfaces.archetypes -DarchetypeArtifactId=richfaces-archetype-gae -DarchetypeVersion=<version> 
	-DgroupId=<yourGroupId> -DartifactId=<yourArtifactId> -Dversion=1.0-SNAPSHOT

2) To build the project for deploy to GAE cloud, run
    mvn clean install 

*BEFORE NEXT STEP - you should setup your GAE account at http://appspot.com and register new application there. 
(read more at http://code.google.com/intl/ru/appengine/docs/python/gettingstarted/uploading.html)

3) Then just execute appcfg from GAE SDK(link) to publish to your account:
	appcfg update <PATH: "generated-application-target-folder/output application folder">  

NOTE:Do not forget to register your own application name and make sure that the demo uses the same name accordingly. 


4) now visit your application using http://<application-name>.appspot.com
4.1) check all the information about deployed application at https://appengine.google.com/dashboard?&app_id=<your-application-id>


PAY ATTENTION:
during build with GAE profile - our org.richfaces.cdk:maven-resource-plugin executed and generates static resources(web-app\static-resources\) for all the skins in order to 
solve the compatibility problem with GAE which restricts java2D usage(our dynamic resources works using that dependency) 

NOTES about additional artifacts in webapp folder:
1) java-gae-jsf-ri - contains modified WebConfiguration.java class which will be put to Web-inf\classes when building with GAE profile. It solves compatibilities 
issues exist in GAE for JSF applications.

2) Webapp-gae folder contains GAE descriptor(appengine-web.xml) and modified application web.xml. Them will be placed to WEb-inf folder after build with GAE profile. web.xml
should be different in order to use static resources generated by plugin instead of dynamic resources. And also restricts threading with 
com.sun.faces.enableThreading context parameter as GAE not allows threads.

============================================================================================================

LOCAL DEPLOYMENT
you still could deploy your application as usually using 
1)	mvn clean install
2)	put to tomcat6\webapps
3) 	run server
4)      enjoy going to http:\\localhost:8080\<app-name>